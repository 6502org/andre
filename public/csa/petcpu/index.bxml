<?xml version="1.0"?>
<board>
	<name>CS/A65 PETCPU</name>
	<keywords>CSA65 6502 PET CPU</keywords>
        <lastmodified>2006-12-09</lastmodified>
	<desc>This board implements a 6502 processor board for the 
		CS/A65 bus system. It in addition to the 
		<a href="../cpu65b/index.html">CPU65b</a> board it allows
		to use (small parts) of the memory area of the CS/A65 bus.
		This can be utilized to access the video board to implement
		a video interface.
	</desc>
	<news>
		<item date="2006-12-09">
			Tested the RS232 interface and added a test driver 
			for it.
		</item>
	</news>
        <driver>
                <name>RS232 test</name>
                <desc><p>
                        This file includes a small test program for the
			RS232 interface. It opens the RS232 interface with
			9600 baud, and mirrors everything it receives from
			RS232 back to RS232.
			Additionally it sends everything typed in on the
			screen to the RS232.
			The screen also works as buffer area, so it is easy
			to monitor the progress. It can be loaded into a
			PET fat40 setup
                        (just 'dL"petuart"' :-) and RUN.
                        </p>
                </desc>
                <file ltype="driver" ptype="tgz">petuart.tar.gz</file>
        </driver>
	<rev>
		<version>1.1B</version>
		<status>untested</status>
		<note type="warn">
			This schematics has been tested by modifying the
			1.1A board version, but the layout itself has not
			been tested. It mainly adds a driver for the Phi2
			signal, and has been tested with the MOS6502 (1MHz), 
			Rockwell R6502AD and R65C02P4 (1 and 2MHz each). 
		</note>
		<note type="msg">
			This table describes the jumper settings available on
			the board
                        <table border="1" class="jumpers"><tr><th>Jumper</th><th>Description</th><th>Setting</th><th>Meaning</th><th>VC1581 setting</th><th>PETCPU setting</th></tr>

<tr><td rowspan="2">JP1</td><td rowspan="2">1/2MHz system clock switch</td><td>1-2</td><td>2 MHz</td><td>*</td><td>8032 (experimental)</td></tr>
<tr><td>2-3</td><td>1MHz</td><td/><td>4032</td></tr>

<tr><td rowspan="2">JP2</td><td rowspan="2">I/O size selector A8</td><td>1-2</td><td>A8=0</td><td rowspan="6">don't care</td></tr>
<tr><td>2-3</td><td>A8 don't care</td><td>*</td></tr>

<tr><td rowspan="2">JP3</td><td rowspan="2">I/O size selector A9</td><td>1-2</td><td>A9=0</td></tr>
<tr><td>2-3</td><td>A9 don't care</td><td>*</td></tr>

<tr><td rowspan="2">JP4</td><td rowspan="2">I/O size selector A10</td><td>1-2</td><td>A10=0</td></tr>
<tr><td>2-3</td><td>A10 don't care</td><td>*</td></tr>

<tr><td rowspan="2">JP5</td><td rowspan="6">ROM size selection. JP5,6, and 7 select the lowest address where ROM is selected (from 64k down). A15 is always high</td><td>1-2</td><td>A14 high</td></tr>
<tr><td>2-3</td><td>A14 low</td><td>*</td><td>*</td></tr>
<tr><td rowspan="2">JP6</td><td>1-2</td><td>A13 high</td><td/><td>*</td></tr>
<tr><td>2-3</td><td>A13 low</td><td>*</td></tr>
<tr><td rowspan="2">JP7</td><td>1-2</td><td>A12 high</td><td/><td>*</td></tr>
<tr><td>2-3</td><td>A12 low</td><td>*</td></tr>

<tr><td rowspan="2">JP8</td><td rowspan="2">External (bus) memory A17</td><td>1-2</td><td>+128k</td><td>*</td></tr>
<tr><td>2-3</td><td>+0k</td><td/><td>*</td></tr>

<tr><td rowspan="2">JP9</td><td rowspan="2">External (bus) memory A16</td><td>1-2</td><td>+0k</td></tr>
<tr><td>2-3</td><td>+64k</td><td>*</td><td>*</td></tr>

<tr><td rowspan="2">JP14</td><td rowspan="2">I/O select enable</td><td>1-2</td><td>/IOSEL enabled</td><td/><td>*</td></tr>
<tr><td>2-3</td><td>/IOSEL disabled</td><td>*</td></tr>

<tr><td rowspan="2">JP15</td><td rowspan="6">RAM size selection. JP15,16, and 17 select the highest address where RAM is selected (from 0k up). A15 is always low</td><td>1-2</td><td>A14 high</td><td/><td>*</td></tr>
<tr><td>2-3</td><td>A14 low</td><td>*</td></tr>
<tr><td rowspan="2">JP16</td><td>1-2</td><td>A13 high</td><td>*</td><td>*</td></tr>
<tr><td>2-3</td><td>A13 low</td></tr>
<tr><td rowspan="2">JP17</td><td>1-2</td><td>A12 high</td><td>*</td><td>*</td></tr>
<tr><td>2-3</td><td>A12 low</td></tr>

<tr><td rowspan="2">JP18</td><td rowspan="2">External (bus) memory A15 invert</td><td>1-2</td><td>invert A15 on bus</td><td/><td>*</td></tr>
<tr><td>2-3</td><td>do not invert A15</td><td>*</td></tr>

<tr><td rowspan="2">JP19</td><td rowspan="2">External (bus) memory A12 invert</td><td>1-2</td><td>invert A12 on bus</td><td/><td>*</td></tr>
<tr><td>2-3</td><td>do not invert A12</td><td>*</td></tr>

<tr><td rowspan="2">JP20</td><td rowspan="2">8/32k RAM switch</td><td>1-2</td><td>8k RAM (6264)</td></tr>
<tr><td>2-3</td><td>32k RAM (62256)</td><td>*</td><td>*</td></tr>

<tr><td rowspan="2">JP21</td><td rowspan="2">Enable on-board RAM</td><td>1-2</td><td>disable on-board RAM (use bus memory only)</td><td/><td rowspan="2">depends on whether you have on-board RAM</td></tr>
<tr><td>2-3</td><td>enable on-board RAM, use bus memory only above address set with JP15/16/17.</td><td>*</td></tr>

<tr><td rowspan="3">JP22</td><td rowspan="3">ROM address A18</td><td>1-2</td><td>0</td><td rowspan="12" colspan="2">depends on the ROM size and where the ROM content is in the ROM IC. For example I have a 64k ROM, and the PET ROM at $0000-$7fff, and the VC1581 ROM at $8000-$ffff. This results in these jumper settings:
<table><tr><td/><td>JP22</td><td>JP23</td><td>JP24</td><td>JP25</td></tr>
<tr><td>PET 4032</td><td>1-2</td><td>5-6</td><td>1-2</td><td>1-2</td></tr>
<tr><td>VC1581</td><td>1-2</td><td>5-6</td><td>1-2</td><td>5-6</td></tr>
</table>
</td></tr>
<tr><td>3-4</td><td>Control port D3</td></tr>
<tr><td>5-6</td><td>1</td></tr>

<tr><td rowspan="3">JP23</td><td rowspan="3">ROM address A17</td><td>1-2</td><td>0</td></tr>
<tr><td>3-4</td><td>Control port D2</td></tr>
<tr><td>5-6</td><td>1</td></tr>

<tr><td rowspan="3">JP24</td><td rowspan="3">ROM address A16</td><td>1-2</td><td>0</td></tr>
<tr><td>3-4</td><td>Control port D1</td></tr>
<tr><td>5-6</td><td>1</td></tr>

<tr><td rowspan="3">JP25</td><td rowspan="3">ROM address A15</td><td>1-2</td><td>0</td></tr>
<tr><td>3-4</td><td>Control port D0</td></tr>
<tr><td>5-6</td><td>1</td></tr>

</table>
		</note>
		<file ltype="schem" ptype="esch">csa_petcpu_v1.1b.sch</file>
		<file ltype="schem" ptype="png">csa_petcpu_v1.1b-sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_petcpu_v1.1b.brd</file>
		<file ltype="layout" ptype="png">csa_petcpu_v1.1b-lay.png</file>
		<file ltype="desc" ptype="txt">csa_petcpu_v1.1b-desc.txt</file>
	</rev>
	<rev>
		<version>1.1A</version>
		<status>prototype with bugs</status>
		<note type="warn">
			This board has been tested and I found a severe bug
			in the timing in combination with the NMOS 6502: 
			the NMOS 6502 can not drive the Phi2 signal with
			sufficient power on the bus, so the board works with 
			the CMOS 6502 version only. Please see the 1.1B
			version for a comparison.
		</note>
		<file ltype="schem" ptype="esch">csa_petcpu_v1.1a.sch</file>
		<file ltype="schem" ptype="png">csa_petcpu_v1.1a-sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_petcpu_v1.1a.brd</file>
		<file ltype="layout" ptype="png">csa_petcpu_v1.1a-lay.png</file>
		<file ltype="photo" ptype="jpg" note="There are two more ICs underneath the UART">csa_petcpu_v1.1a.jpg</file>
	</rev>
</board>
