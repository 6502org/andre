<!DOCTYPE webpage [ <!ENTITY eacute "&#233; "> ]>
<board>
	<name>CS/A65 computer - Caspaer and Gecko</name>
	<keywords>CSA65 6502 self-built computer</keywords>
        <lastmodified>2006-12-30</lastmodified>
	<copyright>
		<author>Andr&eacute; Fachat</author>
		<start>1989</start>
		<end>2011</end>
	</copyright>
	<forum type="6502.org">http://forum.6502.org/viewtopic.php?t=956</forum>
	<desc><p>20th anniversary! In october 1989 I had the first boards of this computer system up and running - and it is still running, although in modernized form. Watch out for more things to come (although in slow sequence as time permits)</p><p>The computers presented here are actually a line of PCB boards that can be plugged into a passive motherboard. 
The boards can be used in different setups, but the <a href="#caspaer">Caspaer</a> is the standard (extensible) base setup.
A special place has the <a href="gecko/index.html">Gecko</a>
that in itself is a complete, single-board computer.</p>
	</desc>
        <news>
		<item date="2011-04-22" state="hot">
			Added a completely new <a href="usb/index.html">USB board</a>!
		</item>
		<item date="2011-01-09">
			Added a completely new <a href="term/index.html">Bus terminator board</a>!
		</item>
		<item date="2011-01-04" state="hot">
			Added a completely new <a href="etholi/index.html">Ethernet board</a>!
		</item>
		<item date="2011-01-02">
			Updated the <a href="ramdisk/index.html">Ramdisk board</a>.
			Now a CPLD-based version is available in addition to the older TTL-based version.
		</item>
		<item date="2010-12-22">
			Updated the <a href="cpu816v2/index.html">CPU816 board (v2)</a> 
			to fix the ROM programming, and make it compatible with the <a href="../adv65/pet816/index.html">PET816</a> board.
		</item>
		<item date="2010-08-22">
			Updated the <a href="vdc/index.html">VDC</a> and 
			<a href="cpu/index.html">CPU</a> boards with versions with better layout
			and in case of VDC a bug fixed.
		</item>
		<item date="2010-08-02">
			Updated the <a href="bios/index.html">BIOS</a> and 
			<a href="cpu/index.html">CPU</a> boards with versions with improved timing.
		</item>
		<item date="2010-04-20" state="hot">
			Finally here it is - Part II! 
			I already overhauled the 65816 board and made a second version, based on a CPLD
			Find it at the <a href="cpu816v2/index.html">65816 CPU V2</a> page.
		</item>
		<item date="2010-01-01" state="hot">
			Finally here it is! 
			I managed to build the <a href="cpu816/index.html">65816 CPU board</a> for the CS/A65.
			The CPU runs at 8 MHz and makes a PET real fast :-)
		</item>
		<item date="2010-01-06">
			Updated the <a href="pwr/index.html">power supply board</a> with a version with I2C master.
		</item>
		<item date="2010-01-07">
			Tested the <a href="ramdisk/index.html">RAMDisk board</a> and found it working in some
			configurations. 
		</item>
        </news>
	<oldnews>
                 <item date="2007-06-29" state="old">
			The <a href="vdc/index.html">Video</a> board page has helper circuits to convert the output to composite video.
                </item>
                <item date="2007-06-27" state="old">
			A new version of the <a href="gecko/index.html">Gecko</a> board, including a PET ROM version using an RS232 interface as editor.
                </item>
                <item date="2007-06-07" state="old">
			A new <a href="spi/index.html">SPI</a> page, with
			a schematics and driver to handle MMC- (and SD-) Cards.
                </item>
                <item date="2007-06-03" state="old">
			A new <a href="petio/index.html">PETIO</a> board revision, which adds a diode for the WDC65C22's /IRQ output.
                </item>
                <item date="2007-05-26" state="old">
			A <a href="viaproto/index.html">VIA prototyping board</a> to test VIA-related circuits.
                </item>
                <item date="2007-05-19" state="old">
			Long time waited for - a power supply board (using a PC power supply as original source): the <a href="pwr/index.html">PWR</a> board.
                </item>
                <item date="2007-01-02" state="old">
			Added a description of the <a href="#caspaer">Caspaer</a> setup.
                </item>
                <item date="2006-12-30" state="old">
			Added an <a href="auxcpu/index.html">auxiliary CPU board</a>, to enable paging and swapping with the 6502!
                </item>
                <item date="2006-12-16" state="old">
			Added a new working revision of the <a href="copro/index.html">coprocessor board</a>!
                </item>
               <item date="2006-12-14" state="old">
			Added a new revision of the <a href="scsi/index.html">SCSI board</a> that now also includes an I2C controller.
                </item>
                <item date="2006-12-09" state="old">
			Added a Motivation section. Why do I actually do all this....?
			Also tested the <a href="petcpu/index.html">PETCPU</a> RS232 interface and added a test driver for it.
                </item>
                <item date="2006-11-26" state="old">
			Introduce the <a href="drvio/index.html">DRVIO</a> board with VC1581 compatible disk and bus interfaces. Add tables with jumper settings for <a href="petcpu/index.html">PETCPU</a>.
                </item>
                <item date="2006-11-23" state="old">
			Added the memory map section to document the different I/O areas used by the boards.
                </item>
                <item date="2006-11-01" state="old">
                        Added new boards and new revisions of existing boards.
			Most notably are the <a href="cpu/index.html">CPU</a>, <a href="bios/index.html">BIOS</a>, <a href="petcpu/index.html">PET CPU</a>, <a href="petio/index.html">PET I/O</a> and <a href="vdc/index.html">Video</a> boards.
                </item>
        </oldnews>
	<section toc="disclaimer" name="Disclaimer">
	<desc>
	<P class="disclaimer">Before you go on, you should know that all this stuff
comes with <strong>no warranty at all </strong>. Of course this hardware is <strong>not</strong>
to be used in any important or even life-critical systems.
The hardware schematics and software
are provided 'as is', without warranty of any kind. The entire risk as
to the quality and performance of the hard- and software is with you. Should
the hard- or software prove defective, you assume the cost of all necessary
servicing, repair or correction.</P>
	</desc></section>
	<section toc="motivation" name="Motivation"><desc><p>
		Why do I do all this? Good question. It all started with 
		modifications to my trusty old Commodore 64 (that I still own
		but rarely use, though). Together with a friend I developed
		a phone switching system so you could use multiple phones
		on a single phone line, with features like call forwarding,
		or conferencing. My friend built several revisions of the 
		6502-based hardware, while I wrote several revisions of 
		the software. It was much fun to do, but it never reached
		production status, though. When I started studying, I decided
		to build my own system with advanced features - and the 
		result was the original CS/A65 computer. </p>
		<p>One motivation was to actually implement and try out
		(then and now) 
		advanced features in microprocessor architecture. You
		can see that in the use of the MMU, or the planned coprocessor
		board. I also wanted it to be easily understandable, so 
		I decided not to use programmable logic chips but implement
		everything in standard logic chips. 
		Although nowadays FPGAs look very interesting (and advanced) :-)
		</p>
	</desc></section>
	<section toc="dist" name="Distribution"><desc>
<p>The boards, i.e. the schematics, and layout artworks are distributed
under the terms of the <a href="../osa/COPYING">GNU public license version 2</a>.
</p><p>
The <a href="bus-1.1.html">bus design</a> is completely in the public domain.
It can be used as long as any changes to the original specs are marked as such
(to not let incompatibilites slip in unnoticed).
</p>
	</desc></section>
	<section toc="overview" name="Introduction"><desc>
	<p>The CS/A65 computer is a modular computer based on a passive
	backplane and a number of active boards. The system is based around
	the 6502 technology originating from the long gone MOS technologies.
	New chips, however, are available from other sources.</p>
	<p>The 6502 is an eight bit CPU with sixteen address lines.
	A prominent feature of the main CPU board is the MMU 
	that, together with the 20 bus address lines, allow for a megabyte
	of address space. This MMU is used in the <a href="../osa/index.html">GeckOS/A65</a> operating system for multitasking support.</p>
	<p>Many of the boards originated from my original plans to recreate
	a Commodore PET3032 computer - on which I got my first programming
	experiences. It has, however, grown way beyond this now.</p>
	<p>Some prominent examples for I/O boards are a SCSI interface, 
	as well as PC floppy interface, or a 6502 emulator.</p>
	<p>A software emulator based on the VICE commodore emulator
	is used for software development for the system</p>
	</desc></section>

	<section toc="general" name="General considerations">
	<subsection toc="othercpu" name="Other CPUs"><desc>
<p>
Currently the system is based on the 6502 processor, although other
configurations (65816, 6809) should be possible. The software I use
for this systems is homemade and can be found on my
<a href="../osa/index.html">OS/A65</a> page. There are drivers and programs
for most of the hardware described below available.
</p>
	</desc></subsection>
	<subsection toc="bus" name="Bus"><desc>
<p>
The bus used is the synchronous bus used in the 6502/6800/6809 CPU bus
interfaces. It has some additional lines, though...
A description of the bus interface is in
<a href="bus-1.1.html">bus.html</a>.</p>
	</desc></subsection>
	<subsection toc="tech" name="Technology"><desc>
<p>
All ICs are standard Low-Power Shottky ('LS) or Advanced Low-Power Shottky
('ALS) TTL ICs. These ICs are still standard, although some of the ICs
seem to have been deprecated and are not <quote>ported</quote> to newer technologies like 'ALS.
</p><p>Also, getting documentation for the 8bit
stuff is getting more and more difficult. But there is an archive in
Finland, <a href="@CBMARC@/documents/chipdata/index.html">@CBMARC@/documents/chipdata/index.html</a>
that has most of the stuff. However there is a separate
<a href="../hwinfo/ls610/index.html">74LS610 page</a>.</p>
	</desc></subsection>
	<subsection toc="schem" name="Schematics"><desc>
<p>
In the older schematics there are no bypass capacitors (buffering the supply
voltage for each IC separately)
that should be from Vcc to GND for each IC. Sometimes they are mentioned
in the parts list, though. Also there is no 100uF capacitor at the CS/A
bus connector between Vcc and GND, to buffer the supply voltage for the
board. These are always implict, so I didn't bother drawing them.
But you should use them anyway.
</p><p>
Most of the boards, esp. the I/O boards, are pretty straightforward.
That's why I concentrate on the special I/O and even then I will only go into
detail when necessary. You should have some basic understanding of
6502 hardware design.
</p><p>
In all mentionings I have just written 6502 or 6522 or 6821. These and
other chips exist in different flavors, and it is only save to assume
a that they are specified for 1MHz bus frequency only.
Check if you want a 2MHz system and use the appropriate faster models.
</p>
	</desc></subsection>
	<subsection toc="age" name="Age"><desc>
<p>
Last but not least one remark. Some of the boards have been designed
as early as 1989, which means they are pretty old. Nowadays I would do some things
differently, the Reset circuitry is one example that can actually
be seen in the newer 2006 versions of the CPU boards for example.
</p><p>
The schematics on this page can be found either as PNG, xfig and gzipped 
postscript, in which case they are at least from 1999 or earlier, or
as <a href="http://www.cadsoft.de">Eagle</a> schematics and PNG, in 
which case they are from 2006 or later.
</p><p>
Nevertheless for the older boards 
I have mostly transcripted the schematics from my hand-drawing to
xfig format. Although I used quite some time to find any remaining error,
be warned, there still may be errors.
And my hand-drawing is still the authoritative source.</p>
<p>For the newer boards you can be pretty sure that the Eagle schematics
and board layout works when the board description indicates that I have
tested the board and found no problem.
	</p></desc></subsection></section>

	<section toc="setups" name="Setups"><desc>
	In this section some supported setups are described.
	</desc>
	<subsection toc="caspaer" name="Caspaer">
	<desc><div class="rightimg">
		<a href="gallery/caspaer.jpg"><img src="gallery/caspaer-small.jpg"/></a><br/>A Caspaer setup
		</div>
		The Caspaer (aka "CaSpAer65" ;-) setup is the base setup for the
		CS/A65 computer with a main CPU board, i.e. for an MMU setup.
		It consists of the <a href="cpu/index.html">CS/A65 CPU</a>, 
		<a href="bios/index.html">CS/A65 BIOS</a>, <a href="vdc/index.html">Video</a> and <a href="petio/index.html">PETIO</a> boards. 
		<ul>
		<li>It uses the current version of the boards, i.e. VDC 1.4,
		BIOS 3.0, PETIO 1.1 and CPU 2.0.</li>
		<li>It uses the PET method of generating the system interrupt,
		by using the extra cable from PETIO to VDC board to use
		the vertical retrace signal (This way no 50Hz generation in the
		power supply is necessary).</li>
		</ul>
	</desc>
	</subsection>
	<subsection toc="legacy" name="CS/A65 legacy">
	<desc>This setup uses the "old" versions of various boards. It
		is basically deprecated and only documented here as I still
		have such a setup and still want to use it... It uses the
		<a href="cpu/index.html">CS/A65 CPU</a>, <a href="bios/index.html">BIOS</a>, <a href="vdc/index.html">Video</a> boards,
		as well as the deprecated <a href="key/index.html">keyboard</a> and <a href="iec/index.html">IEEE488 boards</a>.
		<ul>
		<li>It uses the older version of the boards, i.e. VDC 1.3,
		BIOS 2.x, CPU 1.2, Keyboard 1.0 and IEEE488 1.1.</li>
		<li>It uses the legacy method of generating the system
		interrupt, that requires the 50Hz line on the CS/A65 bus
		to be powered by an external source, in my case by the
		power supply.</li>
		</ul>
	</desc>
	</subsection>
	<subsection toc="gecko" name="Gecko">
	<desc>The Gecko computer is a single-board computer that can only
		use I/O boards on the CS/A bus, and has own peripherals 
		on the board. It has its own <a href="gecko/index.html">Gecko</a> page.
	</desc>
	</subsection>
	<subsection toc="fat40" name="Fat40">
	<desc>The Fat40 setup is similar to the Gecko setup in that the
		<a href="petcpu/index.html">PETCPU board</a> used is a small computer in itself.
		The setup, however, defines to use the <a href="vdc/index.html">Video</a> and <a href="petio/index.html">PETIO</a> boards as well, to simulate
		a Commodore PET 4032 with CRTC, aka "Fat40" - thus the name.
		The Fat40 setup has its own <a href="../cbmhw/ryofat40/index.html">Fat40 page</a>.
	</desc>
	</subsection>
	<subsection toc="vc1581" name="VC1581">
	<desc>The VC1581 setup also uses the <a href="petcpu/index.html">PETCPU</a> board, but uses the 
		<a href="drvio/index.html">DRVIO board</a> to emulate a Commodore VC1581 disk drive.
		The VC1581 setup has its own <a href="../cbmhw/ryo1581/index.html">VC1581 page</a>.
	</desc>
	</subsection>
	</section>
	<section toc="sw" name="Software"><desc>
<p>
The software used is the <a href="../osa/index.html">GeckOS/A65</a>
operating system. It features the handling of the MMU, serial devices,
video output, floppy disk drives, and the newest versions even feature
TCP/SLIP (beta) and SCSI (alpha) support.
</p>
<p>
Some of the software development took place on a modified
VICE emulator, that now emulates a subset of the CS/A65 hardware.
Please check it out at its <a href="emu/index.html">site</a>.
</p>
<p>The board pages contain driver code where appropriate and available.</p>
	</desc></section>
	<section toc="boards" name="Boards"><desc>
	This section describes the different boards and links to the schematics and more detailled descriptions.</desc>
	<subsection toc="mainboards" name="Main Boards">
	<desc>Those boards are the heart of the CS/A65 and Gecko computers.</desc>
          <subitem name="CS/A65 CPU" link="cpu/index.html">
		The main CPU board features an MMU, and newer versions also
		sport bus error condition detection. It is a CPU-only board
		and thus requires the BIOS board for its operation.
	  </subitem>

          <subitem name="65816 CPU" link="cpu816v2/index.html">
		This board uses a 65816 instead of a 6502, and does not use a real MMU.
		Instead the 1MByte CS/A bus memory is mapped into the 16MByte 65816 address space.
		The CPU runs at a whopping 8MHz and the board includes 2MByte fast RAM, while
		the CS/A bus is clocked at 1MHz. It is a CPU-only board and needs the BIOS board
		to boot.
	  </subitem>

          <subitem name="CS/A65 BIOS" link="bios/index.html">
		This BIOS board contains RAM and ROM for the main CPU, as
		well as simple 50Hz interrupt generation, and a
		serial (RS232) interface.
	  </subitem>

          <subitem name="64k PET CPU" link="petcpu/index.html">
		This board implements a simple CPU board that includes
		not only the CPU, but also RAM and ROM (and also a serial
		interface). It can - as it does not have an MMU - make only
		restricted use of the bus memory address space, but can
		fully use the bus I/O area. You can use this board
		instead of a main CPU and BIOS board to build a 
		<a href="#fat40">Commodore 4032</a> or a 
		<a href="#vc1581">Commodore VC1581</a> replica.
	  </subitem>

          <subitem name="Gecko" link="gecko/index.html">
		This board implements a single-board computer with a 
		6502, RAM and ROM, that 
		accidentially ;-) contains a CS/A65 bus connector.
		It sports a serial interface (RS232), Commodore serial IEC
		bus, infrared LED driver to use as remote control
		and a small keyboard interface.
	  </subitem>

          <subitem name="Auxiliary CPU" link="auxcpu/index.html">
		This board is an optional extension to the CS/A65 CPU board
		(only! - it requires the MMU features on the CPU board, which
		are not available on the 65816, PETCPU, or Gecko boards).
		It monitors the bus for error conditions, then takes over
		from the main CPU to fix the error condition. Possible
		error conditions are write protect error, "no execution" 
		fault, or unmapped pages. It can also be used to take a
		trace of the main CPU.
	  </subitem>

          <subitem name="Power board" link="pwr/index.html">
		This board provides basic services, using power from a 
		PC power supply. It includes voltage monitor, 3.3V generation,
		battery buffered power, as well as I2C controlled 
		clock, RAM, and an I2C flash ROM.
	  </subitem>

	</subsection>
	<subsection toc="ioboards" name="I/O boards">
	<desc>Many of the I/O boards are designed to be at least to some extent
Commodore PET compatible 	</desc>

          <subitem name="Video" link="vdc/index.html">
		The VDC board implements a 6545 CRTC-based video interface.
		It includes 64k dynamic RAM that is used as video memory
		(at least parts of). If the system bus runs with 1MHz it can
		display 40 columns PAL video, on 2MHz it can display 80 columns
		video.
	  </subitem>

          <subitem name="CBM PET I/O" link="petio/index.html">
		This board contains basically all Commodore PET I/O interfaces
		except for the video. It thus features an IEEE488 interface,
		as well as keyboard, userport and tape interfaces. It also
		contains a small beeper to make noise :-)
	  </subitem>

          <subitem name="Ethernet" link="etholi/index.html">
		An ethernet interface for the CS/A! Using the CS8900A ethernet
		chip on an Olimex adapter board. TCP/IP functionality provided
		by the uIP TCP/IP stack.
	  </subitem>

          <subitem name="USB" link="usb/index.html">
		A USB interface for the CS/A! Using one SL811HS ethernet
		chip each for host and device operations, this board allows
		to use a USB keyboard and mouse, but can also provide a USB keyboard
		for a USB host!
	  </subitem>

          <subitem name="MMC/SD-Card" link="spi/index.html">
		The MMC- and SD-cards can use a simple SPI-based interface. On this
		board the CS/A can read MMC and SD-Cards!
	  </subitem>

          <subitem name="SCSI" link="scsi/index.html">
		This board implements a parallel SCSI interface to attach SCSI devices
		to the CS/A65 computer. It is currently only tested with
		disk drives, though.
	  </subitem>

          <subitem name="DRVIO floppy and IEC" link="drvio/index.html">
		This board contains a PC-style floppy drive interface using
		the WD1772 chip in a way that is compatible with the 
		Commodore VC1581 disk drive - so that it can be used to
		build a <a href="#vc1581">Commodore VC1581</a> replica.
	  </subitem>

          <subitem name="Double UART" link="duart/index.html">
		Two UART 16550A implement two serial line RS232 interfacs.
	  </subitem>

          <subitem name="PC floppy" link="shug/index.html">
		This board contains a PC-style floppy drive interface using
		the WD1772 chip. It also contains a small printer interface.
	  </subitem>

	</subsection>
	<subsection toc="specialboards" name="Special purpose boards">
	<desc>Special interest in this computer system is on the topic of emulation.
The larger address space and the MMU allows for mapping of other
computers memory into the main memory map.
	</desc>

          <subitem name="SIMM RAMDisk" link="ramdisk/index.html">
		This board implements a RAM Disk based on the (nowadays quite old)
		SIMM memory modules. Using four of them you can build 
		a RAM disk drive with up to 16MByte capacity (only tested to 4M though). 
		Two versions are available, an older one with complete discrete
		logic, and a new one using a CPLD programmable logic chip.
	  </subitem>

          <subitem name="Coprocessor" link="copro/index.html">
		This is a coprocessor board, that 
		runs in parallel to the main CPU and has its own 64k of memory
		mapped into the 1M bus address space as shared memory.
		It can be used for I/O offloading, e.g. for a SCSI or 
		TCP/IP interface.
	  </subitem>

          <subitem name="Emulate a 6502" link="cpuemu/index.html">
		This board allows to connect another 6502-based computer
		with the CS/A65. The other 6502's 64k address space is
		mapped into the 1M bus address space. So with the help of
		the MMU that main CPU can play the role of the replaced
		other computer's CPU for example to test new ROM versions
		of the other computer.
	  </subitem>

          <subitem name="Emulate a keyboard" link="keyemu/index.html">
		This board emulates up to two matrix-based keyboard.
		It features two shared memory areas, where the memory
		is shared between the main CPU and the keyboard matrix
		select and detect lines.
	  </subitem>

          <subitem name="VIA prototyping" link="viaproto/index.html">
		This board has a VIA, with address decoding and a large
		area ready for prototyping.
	  </subitem>

	</subsection>
	<subsection toc="deprecatedboards" name="Deprecated boards">
	<desc>These boards are deprecated and I will not support them
		further. 
(well, Commodore managed to spread the IEEE488
interface across 3 ICs, which was not nice for building it on PCBs
like these, why I moved some of the lines around those days...)
	</desc>

          <subitem name="65816 V1 CPU" link="cpu816/index.html">
		The predecessor of the current V2 65816 CPU board.
		It does not use a CPLD but only a PAL as programmable logic.
		So it is easier to understand and kept here for reference
		and educational purposes.
	  </subitem>

          <subitem name="64k CPU" link="cpu65b/index.html">
		This is a 64k CPU that is actually a stripped down
		Gecko board. It only existed as schematics and is replaced
		by the PETCPU board.
	  </subitem>

          <subitem name="Keyboard and RS232" link="key/index.html">
		This is a PET compatible keyboard interface, plus a
		ACIA 6551 based serial (RS232) interface. As the 6551
		is a rather rough-edged chip, and the keyboard interface
		is available with the PETIO board in a more compatible way, 
		this board is replaced by the PETIO and DUART boards.
	  </subitem>

          <subitem name="IEEE488 and CBM IEC" link="iec/index.html">
		This board implements a partially PET compatible IEEE488
		interface, plus a Commodore serial IEC bus as it is used
		in the C64 for example. In addition both busses can be used
		not only as master, but also as drive so that the CS/A65
		computer can be used as drive by the PET or C64. This 
		board is replaced by the PETIO and 
		DRVIO boards.
	  </subitem>

	</subsection>
	</section>
	<section toc="memmap" name="Memory Map">
       	<desc>A memory map on the I/O memory addresses can now be found in the
		<a href="memmap.html">Memory Map page</a>.
	</desc>
	</section>
	<section toc="numbering" name="Board numbering scheme">
       	<desc><p>The boards are numbered with a major and a minor version number,
		plus a letter denoting the revision of the board. So for
		example a video board is numbered "1.3E", means that 
		it is major version 1, minor version 3, and the fifth revision
		(E).
		</p><p>
		The revisions are changed when a compatible modification has
		been made - this can be a redraw of the schematics (e.g.
		with Eagle instead of xfig), or a minor bugfix (like 
		fixing the reset behaviour). It is also used when during
		development the initial bugs are shaken out (which may
		involve incompatible changes, though, see the DRVIO board...)
		</p><p>
		The minor version is increased when there is a 
		software-compatible extensions of the previous board. For
		example the 1.4 version of the VDC board, although the
		video connector has changed (composite is gone, but VCC
		is there now) it can be used very much like the V1.3
		versions (software-wise).
		</p><p>
		The major version number is increased by major and 
		incompatible changes. 
		For example the BIOS board is in its third major version:
		the first version used an ACIA as RS232 interface, the
		second one an UART instead. The third version is a complete
		redesign with the possibility to provide up to 512k RAM
		and/or ROM. It could be used like a version 2 board, but
		is a major change anyway, therefore a new major version.
		</p><p>
		I try to keep the numbering consistent, but I am only
		human ;-)
		</p>
	</desc>
	</section>
	 <!--driver>
                <name>driver</name>
                <desc>
                </desc>
                <file ltype="driver" ptype="a65" note="hardware driver">csascsi1.a65</file>
        </driver-->
	<!--rev>
		<version>1.0A</version>
		<status>ok</status>
		<note type="msg">
		</note>
		<file ltype="desc" ptype="txt">csascsi1desc.txt</file>
	</rev-->
</board>
