<?xml version="1.0"?>
<board>
	<name>CS/A65 ramdisk</name>
	<keywords>CSA65 6502 ramdisk SIMM</keywords>
        <lastmodified>2010-01-07</lastmodified>
	<desc><p>
		This board uses the (now outdated) 30-pin SIMM memory modules
		to build a RAM disk with up to 16Mbyte. The memory
		is accessible via a single register, using an auto-increment
		byte address counter (8-bit byte address within page only).
		</p><p>
		The current status is that the board works in some specific 
		configurations. I have currently only tested it with the
		65816 CPU board, where it works with 3 modules with 1MByte each,
		but not 4 modules. 
		</p><p>
		Further tests still have to be performed, but I am not sure how far
		I will go into this with this design version. I had a discussion with
		Bil Herd - yes, the designer of the Commodore 128 - who suggested 
		some improvements:
		</p>
		<ul><li>Use a state machine and a GAL to create a simple DRAM controller
			and not rely on gate delay times to create signals. 
			I found the 8296 timing signal generation a good example for such a
			system.</li>
		<li>The board layout used could use some improvements in the layout of the
			power supply lines, but also the address and data lines. </li>
		<li>The board lacks series resistors, and termination resistors, so 
			signal reflections could easily be a problem.</li>
		<li>The /RAS signal is always sent to all modules - on a CPU read or write
			cycle only the active module needs it. This could be a reason for
			the problems below, which are possibly power supply related and
			if all modules draw power at the same time the actual access might
			fail.</li>
		<li>Maybe even use an FPGA to implement a DRAM controller</li>
		</ul>
	</desc>
	<!--diagram>
		<file>keyemu.gif</file>
		<desc>The block diagram shows the dual access to the 
			shared memory.
		</desc>
	</diagram-->
	<rev>
		<version>1.0C</version>
		<status>buggy</status>
		<note type="warn">
			With the 65816 CPU board the RAMDisk has been tested
			and found working for up to 3 modules with 1MByte each.
			With 4 modules certain RAMDisk addresses do not seem
			to work properly. <br/>Tests with larger modules (4M)
			still have to be performed.
		</note>
		<note type="warn">
			With the standard CPU and PETCPU boards
			this board currently has a problem with the
			counter on read accesses. Spurious read strobes
			appear that increase the counter on read accesses
			(but not on write accesses). 
			<br/>
			This does not happen with the 65816 board.
		</note>
		<note type="msg">
			I have created this board by modifying the 1.0A board.
			Currently no layout is available.
		</note>
		<file ltype="schem" ptype="esch">csa_ramdisk-v1.0c.sch</file>
		<file ltype="schem" ptype="png">csa_ramdisk_v1.0c-sch.png</file>
	</rev>
	<rev>
		<version>1.0B</version>
		<status>buggy</status>
		<note type="warn">
			The board timing is not yet fully working.
		</note>
		<note type="stop">
			This board currently has a problem with the
			counter on read accesses. Spurious read strobes
			appear that increase the counter on read accesses
			(but not on write accesses). I do not yet have
			found the source of this problem.
		</note>
		<file ltype="schem" ptype="esch">csa_ramdisk-v1.0b.sch</file>
		<file ltype="schem" ptype="png">csa_ramdisk_v1.0b-sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_ramdisk-v1.0b.brd</file>
		<file ltype="layout" ptype="png">csa_ramdisk_v1.0b-brd.png</file>
	</rev>
	<rev>
		<version>1.0A</version>
		<status>buggy</status>
		<note type="warn">
			The board timing is not yet fully working.
		</note>
		<note type="stop">
			This board currently has a problem with the
			counter on read accesses. Spurious read strobes
			appear that increase the counter on read accesses
			(but not on write accesses). I do not yet have
			found the source of this problem.
		</note>
		<note type="stop">
			The board has a timing problem. The delayed
			2Phi2 signal used with RWDATA by IC6C to generate the 
			input to IC12A comes to fast. This is fixed in V1.0B.
		</note>
		<note type="stop">
			The dynamic RAM draws a lot of power. The CSA PWR
			board checks the supply voltage, so if this board
			is plugged in, the supply voltage drops below
			the RESET watcher threshold, and /RESET is asserted.
			V1.0B contains an additional power supply plug.
		</note>
		<file ltype="schem" ptype="esch">csa_ramdisk-v1.0a.sch</file>
		<file ltype="schem" ptype="png">csa_ramdisk_v1.0a-sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_ramdisk-v1.0a.brd</file>
		<file ltype="layout" ptype="png">csa_ramdisk_v1.0a-brd.png</file>
		<file ltype="photo" ptype="jpg" note="On the left you can see the floppy-type power connector cable I soldered to the bottom">ramdisk_v1.0a-1.png</file>
		<file ltype="photo" ptype="jpg">ramdisk_v1.0a-2.png</file>
	</rev>
</board>
