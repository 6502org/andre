<?xml version="1.0"?>
<board>
	<name>CS/A65 CPU</name>
	<keywords>CSA65 6502 CPU MMU</keywords>	
	<lastmodified>2006-10-13</lastmodified>
	<desc>This board implements the main 6502 CPU board. 
		It extends the 6502 cpu with a memory management unit (MMU)
		to achieve a 1 MByte address space. The board also contains
		the reset circuit, addressing logic for the I/O address space,
		clock and dRAM signal generation (2Phi2), bus drivers, 
		and - in the newer versions - bus error detection circuits.
	</desc>
	<diagram>
		<file>cpu.gif</file>
		<desc><p>Block diagram of the cpu board. It shows the MMU,
			but also the port to read the CPU address.
			Please note that the MMU and the port can be
			accessed from the bus alone, if the cpu is decoupled
			from the bus with the drivers. This can be used
			when the cpu is stopped with the RDY e.g. by
			a bus error.
		</p></desc>
	</diagram>
	<rev>
		<version>2.0K</version>
		<status>ok</status>
		<note type="msg">
			This version only improves the layout, in that it finally has decent
			GND and VCC power supply networks. Otherwise unchanged from 2.0J.
			Note that ICs should be 'ALS. I tried to use 'HCT drivers (the '245)
			but they produced slightly different signals when the CPU was replaced
			by the PET816 CPU card, which produced errors on the VDC access...
			With 'ALS it seems to work. 
		</note>
		<file ltype="desc" ptype="txt">csa_cpu_v2.0h-desc.txt</file>
		<file ltype="parts" ptype="txt">csa_cpu_v2.0h-parts.txt</file>
		<file ltype="schem" ptype="esch">csa_cpu_v2.0k.sch</file>
		<file ltype="schem" ptype="png">csa_cpu_v2.0k_sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_cpu_v2.0k.brd</file>
		<file ltype="layout" ptype="png">csa_cpu_v2.0k_brd.png</file>
	</rev>
	<rev>
		<version>2.0J</version>
		<status>ok</status>
		<note type="msg">
			This version improves on the timing. 2Phi2 is now driven by the XOR, 
			not the actual bus driver anymore. This does not make signal quality 
			better but improves timing such that it is rock stable.
			IC3 is now an 'ALS as well.
		</note>
		<file ltype="desc" ptype="txt">csa_cpu_v2.0h-desc.txt</file>
		<file ltype="parts" ptype="txt">csa_cpu_v2.0h-parts.txt</file>
		<file ltype="schem" ptype="esch">csa_cpu_v2.0j.sch</file>
		<file ltype="schem" ptype="png">csa_cpu_v2.0j_sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_cpu_v2.0j.brd</file>
		<file ltype="layout" ptype="png">csa_cpu_v2.0j_brd.png</file>
	</rev>
	<rev>
		<version>2.0H</version>
		<status>prototype</status>
		<note type="msg">
			Version 2.0H implements all the features mentioned
			above. There is an Eagle(tm) schematics and 
			also layout available. The schematics and layout
			are not yet tested in a prototype board.
		</note>
		<note type="warn">
			This board has not yet been tested.
		</note>
		<note type="msg">
			The TTL types are mostly 'ALS technology, which is 
			faster and less power-hungry than 'LS. In one place,
			however, I needed to fall back to 'LS: IC3 is still
			a 74LS245 instead of a 74ALS245, as it seemed that
			the 6522 on the <a href="../petio/index.html">PETIO</a>
			board did not like it. Don't ask me why, I don't know.
		</note>
		<note type="msg">
			This board implements new features, in that bus
			errors like writing on a write protected page, 
			accessing a page that is not mapped, and also 
			fetching an opcode from a "no-execute" page! This
			feature is similar to the new feature implemented
			in the PC processors, to protect from buffer overflows.
		</note>
		<file ltype="desc" ptype="txt">csa_cpu_v2.0h-desc.txt</file>
		<file ltype="parts" ptype="txt">csa_cpu_v2.0h-parts.txt</file>
		<file ltype="schem" ptype="esch">csa_cpu_v2.0h.sch</file>
		<file ltype="schem" ptype="png">csa_cpu_v2.0h-sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_cpu_v2.0h.brd</file>
		<file ltype="layout" ptype="png">csa_cpu_v2.0h-lay.png</file>
	</rev>
	<rev>
		<version>2.0G</version>
		<status>prototype with bugs</status>
		<note type="msg">
			Version 2.0G implements all the features mentioned
			above. There is an Eagle(tm) schematics and 
			also layout available. The schematics and layout
			are tested in a prototype board.
		</note>
		<note type="warn">
			This version has a severe bug (that can be fixed,
			though): the mmu inputs RS0-RS3 are connected to
			the BUSA0-BUSA3 in the wrong order. Due to the way
			the address bits are connected, it should have RS0
			connected to BUSA3 and so on.
		</note>
		<file ltype="schem" ptype="esch">csa_cpu_v2.0g.sch</file>
		<file ltype="schem" ptype="png">csa_cpu_v2.0g-sch.png</file>
		<file ltype="layout" ptype="ebrd">csa_cpu_v2.0g.brd</file>
		<file ltype="layout" ptype="png">csa_cpu_v2.0g-lay.png</file>
		<file ltype="photo" ptype="jpg" note="Without CPU, to see the driver underneath">csa_cpu_v2.0g.jpg</file>
	</rev>
	<rev>
		<version>1.3B</version>
		<status>ok</status>
		<note type="msg">This version implements an additional
			write protection circuit. I.e. an additional
			mmu bit is used to disable the memory access 
			to the selected memory.
		</note>
		<note type="warn">This schematics is only available
			as a &quot;diff&quot; to the 1.2C version.
		</note>
		<file ltype="desc" ptype="txt">cpu65wpdesc.txt</file>
		<file ltype="schem" ptype="png">cpu65wp.png</file>
		<file ltype="schem" ptype="fig">cpu65wp.fig</file>
		<file ltype="schem" ptype="psgz">cpu65wp.ps.gz</file>
	</rev>
	<rev>
		<version>1.2C</version>
		<status>ok</status>
		<note type="msg">This is the original cpu board. It implements
			most features, but not the bus error detection
			circuits.
		</note>
		<file ltype="desc" ptype="txt">cpu65desc.txt</file>
		<file ltype="parts" ptype="txt">cpu65parts.txt</file>
		<file ltype="schem" ptype="png">cpu65.png</file>
		<file ltype="schem" ptype="fig">cpu65.fig</file>
		<file ltype="schem" ptype="psgz">cpu65.ps.gz</file>
		<file ltype="photo" ptype="jpg" note="The IC on top and the 74LS244 on the right are testbeds for the new 2Phi2 generation and the write protect as implemented in newer versions">cpu65.jpg</file>
	</rev>
</board>
