<!DOCTYPE webpage [ <!ENTITY eacute "&#233; "> <!ENTITY nbsp "&#160;"> ]>
<webpage name="The 65k Project">
  <author>
    <name>Andr&eacute; Fachat</name> 
    <email>@EMAIL@</email>
    <homepage>@WEBROOT@</homepage>
    <yearstart>2011</yearstart>
    <yearend>2012</yearend>
  </author>
  <keywords>6502 16bit 32bit 64bit expansion</keywords>
  <metadesc>6502 16bit 32bit 64bit expansion</metadesc>
  <forum type="6502.org">http://forum.6502.org/viewtopic.php?p=12180</forum>
  <overview>
	<p>
	This page describes the my <em>af65002</em> implementation variant of the 
	<a href="http://www.6502.org/users/andre/65k">65k</a> processor architecture.
	</p>
	<p>
	Note that the specification of the instruction set architecture (on 
	<a href="http://www.6502.org/users/andre/65k">65k</a>) is separate from the implementation
	as specified here. Also the specification and the implementation are covered under different
	licenses. While the documentation is under a creative commons license, the implementation
	here is under the LGPL (lesser general public license).
	</p><p>
	The implementation section below describes my own implementation of the 65k specs. 
    	</p><p>
        To my understanding the techniques described here have been used by various processors for decades already.
        Still there is no guarantee that a processor according to this spec would not be covered by some patents.
	</p>
  </overview>
  <news>
    <item date="2012-04-04">
	Separated out the implementation docs into subdirectory and updated to current state of VHDL.
    </item>
  </news>
  <toc/>

  <section toc="outline" name="65k Outline">
     <desc><p>
	Before a new processor is designed, it needs to be discussed what it should actually
	be able to do, what features it should have and how these features should be implemented.
	Making yourself clear about the outline is the first step.
	</p>
	<ul>
	<li><a href="features.html">Feature discussion</a> - A (somewhat lengthy) discussion of what features
		to include, and how to implement these features</li>
	</ul>
     </desc>
  </section>

  <section toc="spec" name="65k Specification">
     <desc><p>
	These documents describe and specify the 65k processors and as such at least the programming
	model is to be seen as a real specification.
	</p><p>
	Not all documents have been written or even finalized yet.
     	</p>
	<ul>
	<li><a href="specsprog.html">Implementation specs I - programming model</a> - opcode definitions, register sets, functional definition - working draft</li>
	<li><a href="designnotes.html">Design Notes</a> - Notes and comments about the actual design and how I got there.</li>
	<li>Implementation specs II - hardware model - external interface options, signal definitions - to be done</li>
	</ul>
     </desc>
  </section>

  <section toc="impl" name="My 65k Implementation">
     <desc><p>
	These documents describe my implementation of the 65k.
	</p><p>
	Not all documents have been written or even finalized yet.
     	</p>
	<ul>
	<li><a href="arch.html">Architecture overview</a> - processor architecture, component definitions - initial draft</li>
	<li><a href="tests.html">Test setup</a> - Before starting the implementation, define how to test it - initial draft</li>
	<li>Implementation - Implementation documentation - to be done</li>
	<li>Hardware implementation - FPGA boards and hardware setups - to be done</li>
	</ul>
     </desc>
  </section>

  <section toc="roadmap" name="Draft 65k Roadmap">
     <desc><p>This section describes the different versions of the 65k processor, at least what the
	current plans for it are. All processors implement the 65k specifications up to a point
	as defined in this roadmap - leaving out optional parts.
	</p><p>
	The idea behind this is that it will be easier to implement a "smaller" CPU first, find the bugs
	and fix them, then expand it, than to directly start with a full-featured CPU where bugs
	may be even more difficult to find.
	</p>
     </desc>
       <subsection toc="65002" name="65002"><desc><p>Design goals for the 65002 CPU replacement are:</p>
<ul>
<li>Provide original 6502 (legal) opcodes, plus the 65k opcodes up to 16&nbsp;bit</li>
<li>16bit ALU - make it a 6502 as it could have been ...</li>
<li>eliminate bogus memory cycles</li>
<li>keep 8&nbsp;bit external data bus for now</li>
<li>keep 16&nbsp;bit address space for now</li>
<li>No mode bits - as opposed to the 65816 an opcode should have exactly one meaning (except for the original BCD bit)</li>
<li>Extend the original registers to 16 bit (i.e. make it the 65002W - W for Word = 16&nbsp;bit)</li>
<li>No further expansion, i.e. no MMU, no hypervisor mode</li>
</ul>
    </desc>
    </subsection>
        <subsection toc="65010" name="65010"><desc><p>Design goals for the 65010 CPU replacement are:</p>
<p>This has been cancelled. The original roadmap stated vector operations, but currently I think MMU and virtualization is more important</p>
<!--ul>
<li>Extension of the 65002 CPU from above</li>
<li>Add vector operations to the CPU core, like vector add. Allow different address offsets for source and target (from 0 up to 256)</li>
<li>Include for example blitter functions</li>
<li>possibly requires extra registers, depending on whether new 16bit registers are added or existing registers extended</li>
</ul-->
    </desc>
    </subsection>
        <subsection toc="65020" name="65020"><desc><p>Design goals for the 65020 CPU replacement are:</p>
<ul>
<li>Extension of the 65002 CPU from above</li>
<li>abort-ability - i.e. ability to abort an opcode in mid-process and roll it back</li>
<li>Add MMU functionality according to 65k programming specs</li>
<li>Basic "ring 0" functionality - separation of hypervisor and user mode</li>
<li>Optionally 16bit memory interface, possibly with write-back cache/write combining, to allow for very-fast-RAM usage that is only available with 16bit</li>
<li>Register size 32&nbsp;bit (65020L)</li>
</ul>
    </desc>
    </subsection>
        <subsection toc="65040" name="65040"><desc><p>Design goals for the 65040 CPU replacement are:</p>
<ul>
<li>Extension of the 65020 CPU from above</li>
<li>Optionally 32bit memory interface, possibly with write-back cache/write combining, to allow for very-fast-RAM usage that is only available with 16bit</li>
<li>Register size 64&nbsp;bit (65020LL)</li>
</ul>
    </desc>
    </subsection>
        <subsection toc="65060" name="65060"><desc><p>This one is really sketchy for now...Design goals for the 65060 CPU replacement are:</p>
<ul>
<li>Extension of the 65040 CPU from above</li>
<li>Add multi-core functionality - coordinating/synchronizing multiple cores in a single FPGA</li>
<li>Possibly/optionally include L1 read caches in addition to the 16bit memory interface. Not sure if L1 is shared between cores or not</li>
<li>Possibly/optionally include cache coherency protocol between multiple FPGAs</li>
</ul>
    </desc>
    </subsection>
        <subsection toc="io" name="652xx"><desc><p>In addition to a new CPU, I'd probably try to make a bug-fixed 6522, or a 6526 replacement...</p>
    </desc>
    </subsection>
  </section>

    <section toc="refs" name="References">
        <desc>
        </desc>
        <extlink name="6502 history and future" link="http://homepage.mac.com/jorgechamorro/a2things/PDFs/65xxx.txt"/>
        <extlink name="Big Mess O' Wires comparison of CPUs" link="http://www.stevechamberlin.com/cpu/2010/03/27/8-bit-cpu-comparison/"/>
        <extlink name="Big Mess O' Wires CPU architecture" link="http://www.stevechamberlin.com/cpu/bmow1/"/>
        <extlink name="6502.org: kc5tja's wishlist" link="http://forum.6502.org/viewtopic.php?t=1603&amp;start=17"/>
        <extlink name="FC Hardware preservation project" link="http://www.geocities.jp/team_zero_three/FC/index_e.html"/>
    </section>

  <disclaimer>
        No warranty! 
	Subject to change without notice!
	There is no guarantee that this specification will actually work,
        or will ever be implemented
  </disclaimer>

  <closing>
@FOOTER@
  </closing>
</webpage>
