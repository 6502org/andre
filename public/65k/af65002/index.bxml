<!DOCTYPE webpage [ <!ENTITY eacute "&#233; "> <!ENTITY nbsp "&#160;"> ]>
<webpage name="The 65k Project">
  <author>
    <name>Andr&eacute; Fachat</name> 
    <email>@EMAIL@</email>
    <homepage>@WEBROOT@</homepage>
    <yearstart>2011</yearstart>
    <yearend>2012</yearend>
  </author>
  <keywords>6502 16bit 32bit 64bit expansion</keywords>
  <metadesc>6502 16bit 32bit 64bit expansion</metadesc>
  <forum type="6502.org">http://forum.6502.org/viewtopic.php?p=12180</forum>
  <overview>
	<p>
	This page describes the my <em>af65002</em> implementation variant of the 
	<a href="http://www.6502.org/users/andre/65k">65k</a> processor architecture.
	</p>
	<p>
	Note that the specification of the instruction set architecture (on 
	<a href="http://www.6502.org/users/andre/65k">65k</a>) is separate from the implementation
	as specified here. Also the specification and the implementation are covered under different
	licenses. While the documentation is under a creative commons license, the implementation
	here is under the LGPL (lesser general public license).
	</p><p>
	The implementation section below describes my own implementation of the 65k specs. 
    	</p><p>
        To my understanding the techniques described here have been used by various processors for decades already.
        Still there is no guarantee that a processor according to this spec would not be covered by some patents.
	</p>
  </overview>
  <!--news>
    <item date="2012-04-04">
	Separated out the implementation docs into subdirectory and updated to current state of VHDL.
    </item>
  </news-->
  <toc/>

  <section toc="preface" name="Preface">
  <subsection toc="lic" name="License">
    <desc><p>
        This content is licensed under the Creative Commons Attribution Share-Alike license, CC-BY-SA version 3.0.
    </p><p>
        Note this "content" includes this web page, but does not include the 6502.org header
        and the left and right web page columns.  Click on the "Maximize" link to see
        the contents covered by this license.
    </p></desc>
    <extlink name="CC-BY-SA legal code" link="http://creativecommons.org/licenses/by-sa/3.0/legalcode"/>
    <extlink name="CC-BY-SA license deed (short form)" link="http://creativecommons.org/licenses/by-sa/3.0/"/>
  </subsection>
  <subsection toc="disc" name="Disclaimer">
    <desc><p>
        The content comes with no warranty at all!
        There is no guarantee and no promise that this specification is correct, consistent, will actually work,
        or will ever be implemented at all.
    </p><p>
        To my understanding the techniques described here have been used by various processors for decades already.
        Still there is no guarantee that a processor according to this spec would not be covered by some patents.
    </p><p>
        Subject to change without notice!
    </p></desc>
  </subsection>
  <subsection toc="cont" name="Contributors">
    <desc><ul>
        <li>Andr&eacute; Fachat - initial author: <a href="http://www.6502.org/users/andre">8bit Homepage</a></li>
    </ul></desc>
  </subsection>
  <subsection toc="chg" name="Changes">
    <desc><p>This section describes the changes to the document:</p>
      <table border="1">
        <tr><th>Date</th><th>Author</th><th>Changes</th></tr>
        <tr><td>2012-04-11</td><td>Andr&eacute; Fachat</td><td>Initial version</td></tr>
      </table>
    </desc>
  </subsection>
  </section>

  <section toc="outline" name="65002 Outline">
     <desc><p>
	The 65002 is the first implementation of my af65k line of processors.
	As such it implements the basic features for af65k instruction set:
	</p>
	<ul>
	<li>Wide registers and address sizes</li>
	<li>Wide memory interface</li>
	<li>Additional B and E registers</li>
	<li>Prefix bytes to enable use of wide and more registers</li>
	<li>User and Hypervisor mode</li>
	<li>EXT opcode page, some SYS opcodes</li>
	</ul>
	<p>
	Additionally the processor is compile-time configurable for 16, 32 or 64&nbsp;bit 
	wide registers, and currently 8 or 16&nbsp;bit memory interface.
	</p>
	<p>
	Here is what is notably missing:
	</p>
	<ul>
	<li>Memory management / address translation</li>
	<li>QUICK opcode page</li>
	<li>Most of the SYS opcode page</li>
	<li>No processor configuration registers (so far?)</li>
	</ul>
     </desc>
  </section>

  <section toc="specs" name="Specification">
     <desc><p>
	The af65002 specification includes all the opcodes from the standard 65k opcode page,
	as well as the prefix1 and prefix2 prefixes. It also includes the EXT and SYS prefixes.
	</p>
	<p>
	The exact specs are (will be) described in TODO (page is generated from the
	actual processor code generator).
     </p></desc>
  </section>

  <section toc="arch" name="Architecture">
     <desc><p>
	The 65002 architecture is described in a separate page:</p>
	<ul>
	<li><a href="arch.html">af65002 architecture</a></li>
	</ul>
     </desc>
  </section>

  <section toc="code" name="Code">
     <desc><p>
	The code is published on the <a href="http://github.com/fachat/af65k">Github</a> site.
	You can either browse the code there or use git to download the code to a local
	repository, to be able to compile it yourself.
	</p>
	<p>
	The code is written in VHDL.
     </p></desc>
  </section>

  <section toc="roadmap" name="Roadmap">
     <desc><p>
	The af65002 will share many parts of the code with other variants, as the 
	system is very modular. As the af65k is developed further, the af65002
	will inherit further features, like (if at all) more addressing modes or opcodes.
     </p><p>
	Another option is the multi-core functionality.
     </p></desc>
       <subsection toc="naming" name="Naming conventions">
	<desc><p>
	  The naming convention for the af65002 is:
	  </p><pre>
    af65002Rx/yz
</pre><p>
	  where <code>x</code> is the revision number, <code>y</code> is the number of cores,
	  and <code>z</code> is the width notation. So for example:</p><pre>
    af65002R0/1W
</pre>or<pre>
    af65002R0W
</pre><p>
	  is the notation of revision 0 (zero), single core, and word width (16&nbsp;bit) registers.
	  </p><p>
	  The notation and number of cores is numeric, the width is "W", "L", or "Q" for 16, 32 or 64&nbsp;bit
	  widths.
	  </p>
	</desc>
       </subsection>

       <subsection toc="R0" name="Revision zero">
	<desc><p>
	  The revision zero is the ongoing revision as long as I am still working on it.
	</p></desc>
       </subsection>

       <subsection toc="R1" name="Revision one">
	<desc><p>
	  This revision will be the first "complete" revision, with all the EXT and SYS opcodes
	  as currently defined, including the processor configuration registers.
	</p></desc>
       </subsection>
    </section>

  <disclaimer>
        No warranty! 
	Subject to change without notice!
	There is no guarantee that this specification will actually work,
        or will ever be implemented
  </disclaimer>

  <closing>
@FOOTER@
  </closing>
</webpage>
