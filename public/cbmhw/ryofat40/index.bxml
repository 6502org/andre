<!DOCTYPE webpage [ <!ENTITY eacute "&#233; "> ]>
<webpage name="Roll your own PET4032 (Fat40)">
  <author>
    <name>Andr&eacute; Fachat</name> 
    <yearstart>2006</yearstart>
    <yearend>2006</yearend>
    <email>@EMAIL@</email>
  </author>
  <keywords>Commodore PET 4032</keywords>
  <metadesc>A new implementation of the Commodore PET 4032</metadesc>
  <overview>
	<p>This page describes how you can build your own PET 4032 using
	the boards of the <a href="../../csa/index.html">CS/A65</a> computer.</p><p>
	Well, not actually the whole computer, but at least the mainboard,
	where "only" the case, screen, and power supply are missing. I have
	though managed to use a standard PAL screen with this PET by 
	redefining the timing values the PET ROM writes into the 
	CRTC registers.
	</p><p>
	Basically what you do is to combine the <a href="../../csa/petcpu/index.html">PETCPU</a>,
	<a href="../../csa/petio/index.html">PETIO</a> and <a href="../../csa/vdc/index.html">Video</a> boards 
	into one computer, put the PET ROM into a ROM for the PETCPU ROM socket
	and there you are. The following sections describe the special settings
	on the different boards.
	</p>
  </overview>
  <news>
    <item date="2006-12-22">
	Added the version using the CPU and BIOS boards instead of the PETCPU board.
    </item>
    <item date="2006-11-12">
	Added the ROMs.
    </item>
  </news>
  <itemlist name="PETCPU Setup">
    <description>
	This section describes a setup using the three PETCPU, PETIO
	and VDC boards.
    </description>
    <items>
	<item name="Board Settings">
    <description><p>
	This section describe the CS/A65 boards making up the PET 4032.
	Here is a <a href="fat40.jpg">picture</a> of the three boards on 
	a backplane. Note the separate cable between the VDC and the 
	PETIO boards, to handle the video retrace (VSYNC) interrupt generation
	from VDC to PETIO and the character ROM selection.
	from PETIO to VDC.</p>
    </description>
     <subitem name="PETCPU board" link="../../csa/petcpu/index.html">
	The PETCPU board must be set to a maximum of 32k RAM on the board
	itself, and maximum of 28k of ROM, so that the memory area at
	$8*** is selected on the CS/A65 bus and can be handled by the
	video board. Actually all memory not handled by the PETCPU is
	covered by RAM from the video board (e.g. the $9*** area). 
	To achieve this, the PETCPU board must be set to use the 
	$01**** are on the bus. In addition it must exclusive-or
	the address lines 15 and 12 - as the PET CRTC is set to a 
	memory address of $9000 - but the video board resets the video
	to $0000 with the control register and the values set in the
	CRTC. Also the I/O area must be enabled for $E800 to $EFFF.
	<br/>You can see the jumpers in this <a href="petcpu.jpg">picture</a>.
	Please note that this is jumpered for 2MHz, and the RAM is missing -
	as the RAM is setup to be used from the video board.
     </subitem>
     <subitem name="PETIO board" link="../../csa/petio/index.html">
	On the PETIO board only the "special features" must be
	switched off, especially the IEEE488 slave mode feature, as the
	ROM does not handle this, as well as the EOI must be located
	at its original place on the keyboard PIA.
     </subitem>
     <subitem name="Video board" link="../../csa/vdc/index.html">
	The video board must be set to the memory area $01****. Otherwise
	it should best be a 1.4 version, as the control port is reset
	with /RES and needs not be set by the ROM.
     </subitem>
     </item>
  <item name="ROMs">
    <description><p>
	In this section you can find the ROMs for the PET. They basically
	are the original PET ROMs, only that I have modified the 
	CRTC timing parameters. Please note that the 2MHz (8032) version
	is experimental only, as the IEEE488 timing seems to be flakey
	now.</p>
    </description>
     <subitem name="Fat40 4032 graphics keyboard 1MHz" link="roms/pet-fat40-1mhz-n.bin">
	This is the 1MHz ROM that produces roughly PAL compatible video output.
     </subitem>
     <subitem name="8032 business keyboard 2MHz" link="roms/pet-8032-2mhz-b.bin">
	This 2MHz version is experimental. As the VDC board can only do 80 columns with 2MHz bus frequency, no 8032 with 1MHz is possible.
     </subitem>
     </item>
    </items>
  </itemlist>
  <itemlist name="MMU Setup">
	<description>This section contains a description of a setup
	using the main CPU (including MMU) and BIOS board instead of the
	PETCPU board as above.
	</description>
    <items>
	<item name="Board Settings">
    <description><p>
	This section describe the CS/A65 boards making up the PET 4032
	in a setup with the CPU+BIOS board combination. 
	Please note that the separate cable between the VDC and the 
	PETIO boards, to handle the video retrace (VSYNC) interrupt generation
	is still required as above.
	</p>
    </description>
     <subitem name="CSACPU board" link="../../csa/cpu/index.html">
	The CPU board must be set to 1MHz. The ROM patch below expects
	the MMU at $eff*, so the board must be set to an I/O area of
	2k from $E800-$EFFF and the MMU to $EFF*. By modifying the patch
	other values are possible.
     </subitem>
     <subitem name="BIOS board" link="../../csa/bios/index.html">
	The BIOS must be set that the ROM as described below
	is found at $08000-$0FFFF so that the CPU boots from it.
	The RAM should be on $00000-$07FFF.
     </subitem>
     <subitem name="PETIO and VDC boards">
	Please use the same settings as described above.
     </subitem>
     </item>
  <item name="ROMs">
    <description><p>
	The ROMs are basically the same ROMs as above, i.e. including
	the modified CRTC timing parameters.
	In addition, the CPU must set the MMU and BIOS board to correct
	values on Reset. This is done by a small patch that is included
	in the ROM listed below.
	</p>
    </description>
     <subitem name="Fat40 4032 graphics keyboard 1MHz" link="roms/pet-fat40-1mhz-n-mmu.bin">
	This is the 1MHz ROM that produces roughly PAL compatible video output in the MMU version.
     </subitem>
     <subitem name="ROM diff" link="mmu.diff">This is the ROM diff as hex dump. The Reset vector is modified to point to the patch that sets up the correct values and jumps to the old reset routine.
     </subitem>
     <subitem name="Patch source" link="initcsa.a65">This is the source for the ROM patch (excluding the modified reset vector.
     </subitem>
     </item>
    </items>
  </itemlist> 
  <disclaimer name="Disclaimer">
@DISCLAIMER@
</disclaimer>
  <closing>
@FOOTER@
  </closing>
</webpage>
